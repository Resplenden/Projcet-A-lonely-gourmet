<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="edu.study.mapper.replyMapper">
	
	<!-- 댓글 목록(페이징) -->
  	<select id="replyListPage" parameterType="searchVo" resultType="replyVo">	
		SELECT * FROM reply		
		WHERE bidx = #{bidx}
		AND delYn = 'N'		
		
		limit #{replyStart} , #{replyEnd}
 	</select>
	
	<!-- 댓글 총 갯수 조회 -->
	<select id="count" resultType="int">
		select count(*)
		  from reply
		where bidx = #{bidx}
		and delYn = 'N'
	</select>
  	
  	<!-- 댓글 쓰기-->
 	<insert id="writeReply" parameterType="replyVo">
 		insert into reply(
 			content
 			,	writer
 			,	bidx
 		)values(
 			#{content}
 			,	#{writer}
 			,	#{bidx}
 		)
 	</insert>
 	
 	<!-- 댓글 수정 -->
 	<update id="updateReply" parameterType="replyVo">
 		update reply
 		   set content = #{content}
 		 where ridx = #{ridx}
 	</update>
 	
 	<!-- 댓글 삭제 -->
	<delete id="deleteReply" parameterType="int">
		update reply
			set delYn = 'Y'
		 where ridx = #{ridx}
	</delete>
	
	<!-- 댓글 조회 -->
	<select id="selectReply" parameterType="int">
		select ridx
			,  content
 			,  wdate
 			,  writer
 			,  bidx
 		 from  reply
 		where  ridx = #{ridx}
	</select>
	
	

	
	<!-- 게시글 추천 클릭시 replytb의 likeCnt 업데이트 -->
	<update id="updateReplyLikeCnt" parameterType="int">
		update reply
		   set likeCnt = likeCnt+1
		 where ridx = #{ridx}
	</update>	
	
	<!-- 게시글 비추천 클릭시 replytb의 likeCnt 업데이트 -->
	<update id="updateReplyHateCnt" parameterType="int">
		update replytb
		   set hateCnt = hateCnt+1
		 where ridx = #{ridx}
	</update>	

	<!-- 추천이나 비추천 클릭시 replyLiketb에 insert -->
	<insert id="insertReplyLiketb" parameterType="replyLikeVo">
		insert into replylike(				
			id
			,	ridx
		)values(				
			#{id}
			,	#{ridx}
		)
	</insert>

	<!-- 추천 클릭시 likeCheck를 1로 만들어서 중복 방지 -->
	<update id="updateByReplyLikeCheck" parameterType="replyLikeVo">	
		update replylike
		   set likeCheck = 1
		 where ridx = #{ridx}
		   and id = #{id}
 	</update>

	<!-- 비추천 클릭시 hateCheck를 1로 만들어서 중복 방지 -->
	<update id="updateByReplyHateCheck" parameterType="replyLikeVo">
		update replylike
		   set hateCheck = 1
		 where ridx = #{ridx}
		   and id = #{id}
 	</update>
 	
 	<!-- 게시글 추천 or비추천 중복방지 -->
 	<select id="replyLikeCheck" parameterType="replyLikeVo" resultType="int">
 		select count(*)
 		  from replylike
 		 where ridx = #{ridx}
 		   and id = #{id}
 	</select>
</mapper>
	